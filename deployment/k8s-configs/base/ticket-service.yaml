apiVersion: v1
kind: Service
metadata:
  name: ticket-service 
spec:
  ports:
  - name: http 
    protocol: TCP
    port: 80 
    targetPort: 8080
  selector:
    app: ticket-service 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ticket-service-deployment
  labels:
    app: ticket-service 
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: ticket-service 
  template:
    metadata:
      labels:
        app: ticket-service 
    spec:
      nodeSelector:
         cloud.google.com/compute-class: "Balanced"
      containers:
      - name: ticket-service 
        image: asia-east1-docker.pkg.dev/ticket-master-tall15421542/ticket-master/service:latest
        env:
          - name: OTEL_SERVICE_NAME
            value: "ticket-service"
          - name: OTEL_COLLECTOR_NAME
            value: 'opentelemetry-collector'
          - name: OTEL_COLLECTOR_NAMESPACE
            value: 'opentelemetry'
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: "http://$(OTEL_COLLECTOR_NAME).$(OTEL_COLLECTOR_NAMESPACE).svc.cluster.local:4318"   
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        command: ["java", "-javaagent:/opentelemetry-javaagent.jar","-Djava.security.manager=allow", "-cp", "app.jar"]
        args: ["lab.tall15421542.app.ticket.Service", 
          "-c", "config/client.properties", 
          "-p", "8080", 
          "-n", "0",
          "-h", "$(POD_IP)",
          "-pc", "producer-config/producer.properties",
          "-sc", "stream-config/stream.properties",
          "-r"
        ]
        ports:
          - containerPort: 8080
        volumeMounts:
          - name: client-properties
            mountPath: /config
            readOnly: true
          - name: producer-properties
            mountPath: /producer-config
            readOnly: true
          - name: stream-properties
            mountPath: /stream-config
            readOnly: true
        resources:
          requests:
            memory: "2G"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: v1/health_check
            port: 8080 
          failureThreshold: 5 
          periodSeconds: 10
          initialDelaySeconds: 5

        readinessProbe:
          httpGet:
            path: v1/health_check
            port: 8080 
          failureThreshold: 3
          periodSeconds: 10
          initialDelaySeconds: 5

        startupProbe:
          httpGet:
            path: v1/health_check
            port: 8080
          failureThreshold: 30
          periodSeconds: 10
      volumes:
        - name: client-properties
          configMap: 
            name: client.properties
        - name: producer-properties
          configMap: 
            name: ticket-service.producer.properties
        - name: stream-properties
          configMap: 
            name: ticket-service.stream.properties
---
apiVersion: networking.gke.io/v1
kind: HealthCheckPolicy
metadata:
  name: lb-healthcheck
spec:
  default:
    timeoutSec: 15
    checkIntervalSec: 15
    logConfig:
      enabled: true 
    config:
      type: HTTP
      httpHealthCheck:
        port: 8080 
        requestPath: /v1/health_check 
  targetRef:
    group: "" 
    kind: Service 
    name: ticket-service 
